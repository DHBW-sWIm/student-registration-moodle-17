<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * upgrade DB
 * @param $oldversion
 * @package   local_student_registration
 * @copyright 2020 "DHBW Mannheim" 
 * @license   https://moodle.dhbw-mannheim.de/ 
 */

defined('MOODLE_INTERNAL') || die();

function xmldb_local_student_registration_upgrade($oldversion)
{
    global $DB;
    $dbman = $DB->get_manager();

    /// Add a new column newcol to the mdl_myqtype_options
    if ($oldversion < 2020051801) {
        // Code to add the column, generated by the 'View PHP Code' option of the XMLDB editor.

        // Define table sr_capacity_planning to be created.
        $table = new xmldb_table('sr_capacity_planning');
        // Adding fields to table local_student_registration_sr_capacity_planning
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('initial_demand', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_company_representative_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_active_study_course.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id']);
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id']);
        $table->add_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_company_representative to be created.
        $table = new xmldb_table('sr_company_representative');
        // Adding fields to table local_student_registration_sr_capacity_planning
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('first_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('last_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('phone', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_partner_compnay_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_company_representative.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_partner_compnay_id', XMLDB_KEY_FOREIGN, ['sr_partner_compnay_id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);
        // Adding indexes to table sr_company_representative.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['first_name', 'last_name']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_partner_compnay to be created.
        $table = new xmldb_table('sr_partner_compnay');
        // Adding fields to table sr_partner_compnay
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('company_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('classification', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('contact_information', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        // Adding keys to table sr_partner_compnay.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        // Adding indexes to table sr_partner_compnay.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['company_name']);



        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_process to be created.
        $table = new xmldb_table('sr_process');
        // Adding fields to table sr_process
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('program_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('start_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('end_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('start_date_for_a', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('start_date_for_b', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('closed', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('director_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_programs_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_process.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('director_id', XMLDB_KEY_FOREIGN, ['director_id'], 'user', ['id']);
        $table->add_key('sr_study_programs_id', XMLDB_KEY_FOREIGN, ['sr_study_programs_id'], 'sr_study_programs', ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_reservation_list to be created.
        $table = new xmldb_table('sr_reservation_list');
        // Adding fields to table sr_reservation_list
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('first_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('last_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('date_of_birth', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('contract_sent', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('contract_received', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('contract_withdrawn', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('private_email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('sr_company_representative_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_active_study_course_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_reservation_list.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative', ['id']);
        $table->add_key('sr_active_study_course_id', XMLDB_KEY_FOREIGN, ['sr_active_study_course_id'], 'sr_active_study_course', ['id']);
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process', ['id']);
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields', ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);
        // Adding indexes to table sr_reservation_list.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['first_name', 'last_name']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_study_fields to be created.
        $table = new xmldb_table('sr_study_fields');
        // Adding fields to table sr_study_fields
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('study_field_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('description', XMLDB_TYPE_CHAR, '455', null, null, null, null);
        $table->add_field('old', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('sr_study_programs_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        // Adding keys to table sr_study_fields.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_study_programs_id', XMLDB_KEY_FOREIGN, ['sr_study_programs_id'], 'sr_study_programs', ['id']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }


        // Define table sr_study_places_status to be created.
        $table = new xmldb_table('sr_study_places_status');
        // Adding fields to table sr_study_places_status
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('study_places_available', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('current_demand', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_study_fields.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields', ['id']);
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process', ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }


        // Define table sr_study_programs to be created.
        $table = new xmldb_table('sr_study_programs');
        // Adding fields to table sr_study_programs
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('study_program_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('description', XMLDB_TYPE_CHAR, '455', null, null, null, null);
        $table->add_field('valid_from', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('valid_to', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('old', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        // Adding keys to table sr_study_fields.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_waiting_list to be created.
        $table = new xmldb_table('sr_waiting_list');
        // Adding fields to table sr_waiting_list
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('first_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('last_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('date_of_birth', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('private_email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('moved_to_rl', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('sr_company_representative_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_waiting_list.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields', ['id']);
        $table->add_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative', ['id']);
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process', ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);
        // Adding indexes to table sr_waiting_list.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['first_name', 'last_name']);

        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_active_study_course to be created.
        $table = new xmldb_table('sr_active_study_course');
        // Adding fields to table sr_active_study_course
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('study_course_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('study_course_abbreviation', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('start_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('end_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('course_capacity', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_employees_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_active_study_course.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_employees_id', XMLDB_KEY_FOREIGN, ['sr_employees_id'], 'user', ['id']);
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields', ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user', ['id']);

        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }


        // student_registration savepoint reached. savepoint reached.
        upgrade_plugin_savepoint(true, 2020051801, 'local', 'student_registration');
    }

    if ($oldversion < 2020052301) {

        $table = new xmldb_table('sr_company_representative');
        $field = new xmldb_field('user_id', XMLDB_TYPE_INTEGER, '10', true, null, null, null);



        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
            $table->add_key('user_id', XMLDB_KEY_FOREIGN, ['user_id'], 'user', ['id']);
        }
        upgrade_plugin_savepoint(true, 2020052301, 'local', 'student_registration');
    }
    if ($oldversion < 2020062300) {

        // Define field tile_order to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('tile_order', XMLDB_TYPE_INTEGER, '10', null, null, null, null, 'color');
        $fieldd = new xmldb_field('order');
        // Conditionally launch add field tile_order.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
            $dbman->drop_field($table, $fieldd);
        }
        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 2020062300, 'local', 'student_registration');
    }

    if ($oldversion < 2020062301) {

        // Changing precision of field button_icon on table sr_management_tiles to (255).
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('button_icon', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'button_url');
        $field2 = new xmldb_field('color', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'list_element_4');
        // Launch change of precision for field button_icon.
        $dbman->change_field_precision($table, $field);
        $dbman->change_field_precision($table, $field2);
        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 2020062301, 'local', 'student_registration');
    }

    if ($oldversion < 20200625003) {

        // Define field sr_process_id to be added to sr_active_study_course.
        $table = new xmldb_table('sr_active_study_course');
        $field = new xmldb_field('sr_process_id', XMLDB_TYPE_INTEGER, '18', null, XMLDB_NOTNULL, null, 0, 'timemodified');
        $key = new xmldb_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process', ['id']);
        // Conditionally launch add field sr_process_id.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }
        $dbman->add_key($table, $key);

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625003, 'local', 'student_registration');
    }

    if ($oldversion < 20200625007) {

        // Define field plugin to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('plugin', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'tile_order');

        // Conditionally launch add field plugin.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625007, 'local', 'student_registration');
    }

    if ($oldversion < 20200625008) {

        // Define field id to be added to changeme.
        $table = new xmldb_table('dg_company');
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('company_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('classification', XMLDB_TYPE_CHAR, '8', null, null, null, 'B');

        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));

        $table2 = new xmldb_table('dg_company_representative');
        $table2->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table2->add_field('first_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table2->add_field('last_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table2->add_field('email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table2->add_field('phone', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table2->add_field('compnay_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table2->add_field('mdl_user_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);

        $table2->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table2->add_key('compnay_id', XMLDB_KEY_FOREIGN, ['compnay_id'], 'dg_company', ['id']);
        $table2->add_key('mdl_user_id', XMLDB_KEY_FOREIGN, ['mdl_user_id'], 'user', ['id']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        if (!$dbman->table_exists($table2)) {
            $dbman->create_table($table2);
        }
        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625008, 'local', 'student_registration');
    }

    if ($oldversion < 20200625009) {

        // Define field semester to be added to sr_process.
        $table = new xmldb_table('sr_process');
        $field = new xmldb_field('semester', XMLDB_TYPE_CHAR, '255', null, null, null, 'Winter Semester', 'timemodified');

        // Conditionally launch add field semester.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625009, 'local', 'student_registration');
    }
    if ($oldversion < 20200625010) {

        // Define field closed to be added to sr_active_study_course.
        $table = new xmldb_table('sr_active_study_course');
        $field = new xmldb_field('closed', XMLDB_TYPE_INTEGER, '10', null, null, null, '0', 'timemodified');

        // Conditionally launch add field closed.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625010, 'local', 'student_registration');
    }

    if ($oldversion < 20200625011) {

        // Define field user_id to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('user_id', XMLDB_TYPE_INTEGER, '10', null, null, null, 2, 'plugin');
        $key = new xmldb_key('user_id', XMLDB_KEY_FOREIGN, ['user_id'], 'user', ['id']);

        // Conditionally launch add field user_id.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
            $dbman->add_key($table, $key);
        }

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625011, 'local', 'student_registration');
    }

    if ($oldversion < 20200625012) {

        // Define key sr_company_representative_id (foreign) to be dropped form sr_capacity_planning.
        $table1 = new xmldb_table('sr_capacity_planning');
        $keyold1 = new xmldb_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative', ['id']);
        $keynew1 = new xmldb_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'dg_company_representative', ['id']);

        // Launch drop key sr_company_representative_id.
        $dbman->drop_key($table1, $keyold1);
        $dbman->add_key($table1, $keynew1);

        $table2 = new xmldb_table('sr_reservation_list');
        $key = new xmldb_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative', ['id']);
        $dbman->drop_key($table2, $key);
        $key = new xmldb_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'dg_company_representative', ['id']);
        $dbman->add_key($table2, $key);

        $table3 = new xmldb_table('sr_waiting_list');
        $key = new xmldb_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative', ['id']);
        $dbman->drop_key($table3, $key);
        $key = new xmldb_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'dg_company_representative', ['id']);
        $dbman->drop_key($table3, $key);

        $table = new xmldb_table('sr_company_representative');
        if ($dbman->table_exists($table)) {
            $dbman->drop_table($table);
        }
        $table = new xmldb_table('sr_partner_compnay');

        // Conditionally launch drop table for dg_company.
        if ($dbman->table_exists($table)) {
            $dbman->drop_table($table);
        }



        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625012, 'local', 'student_registration');
    }

    if ($oldversion < 20200625013) {

        // Changing type of field valid_from on table sr_study_programs to int.
        $table = new xmldb_table('sr_study_programs');
        $field1 = new xmldb_field('valid_from', XMLDB_TYPE_DATETIME,  '10', null, null, null, null, null);
        $field2 = new xmldb_field('valid_to', XMLDB_TYPE_DATETIME,  '10', null, null, null, null, null);

        // Launch change of type for field valid_from.
        $dbman->change_field_type($table, $field1);
        $dbman->change_field_type($table, $field2);

        $DB->delete_records('sr_reservation_list');
        $table = new xmldb_table('sr_reservation_list');
        $field = new xmldb_field('date_of_birth', XMLDB_TYPE_DATETIME,  '10', null, null, null, null, null);

        // Launch change of type for field date_of_birth.
        $dbman->change_field_type($table, $field);
        $DB->delete_records('sr_waiting_list');
        // Changing type of field date_of_birth on table sr_waiting_list to int.
        $table = new xmldb_table('sr_waiting_list');
        $field = new xmldb_field('date_of_birth', XMLDB_TYPE_DATETIME,  '10', null, null, null, null, null);

        // Launch change of type for field date_of_birth.
        $dbman->change_field_type($table, $field);
        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625013, 'local', 'student_registration');
    }

    if ($oldversion < 20200625014) {

        // Define field task_path to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('task_path', XMLDB_TYPE_CHAR, '455', null, null, null, null, 'user_id');

        // Conditionally launch add field task_path.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        $DB->delete_records('sr_management_tiles');
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/Menu.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '#1',
            'list_element_2' => '#2', 'list_element_3' => '#3', 'list_element_4' => '#4', 'color' => 'danger', 'tile_order' => 1,
            'plugin' => 'Management Dashboard', 'task_path' => 'dashboard_lib.php'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Scientific Paper', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/index.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Assign Supervisors',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Dashboard Settings', 'button_name' => 'Settings',
            'button_url' => '/local/student_registration/Dashboard_Settings.php', 'button_icon' => 'fa fa-globe', 'list_element_1' => 'Create new tiles',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 100,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_prcess_overview.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '#5',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 1,
            'plugin' => 'Student Registration', 'task_path' => '../dashboard_lib.php'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Capacity Planning', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_Ma_CP.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Course Management', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_Ma_CC.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 3,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Settings for STRE', 'button_name' => 'Edit',
            'button_url' => '/local/student_registration/views/Settings.php', 'button_icon' => 'fa fa-globe', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 5,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Lecturer recruitment', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/index.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Help center access',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 3,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'CRM', 'button_name' => 'Go to V-Tiger',
            'button_url' => 'https://google.com#external', 'button_icon' => 'fa fa-globe', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Study Programs Managemet', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/SP_master_data/SP_Master_Data.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Add new Study Programs',
            'list_element_2' => 'Adjust existing Study Programs', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625014, 'local', 'student_registration');
    }

    if ($oldversion < 20200625015) {

        // Define field function to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('function', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'task_path');

        // Conditionally launch add field function.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }


        $DB->delete_records('sr_management_tiles');
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/Menu.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '#1',
            'list_element_2' => '#2', 'list_element_3' => '#3', 'list_element_4' => '#4', 'color' => 'danger', 'tile_order' => 1,
            'plugin' => 'Management Dashboard', 'task_path' => 'dashboard_lib.php', 'function' => 'get_tasks_md'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Scientific Paper', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/index.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Assign Supervisors',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Dashboard Settings', 'button_name' => 'Settings',
            'button_url' => '/local/student_registration/Dashboard_Settings.php', 'button_icon' => 'fa fa-globe', 'list_element_1' => 'Create new tiles',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 100,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_prcess_overview.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '#5',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 1,
            'plugin' => 'Student Registration', 'task_path' => '../dashboard_lib.php', 'function' => 'get_tasks_md'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Capacity Planning', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_Ma_CP.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Course Management', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_Ma_CC.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 3,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Settings for STRE', 'button_name' => 'Edit',
            'button_url' => '/local/student_registration/views/Settings.php', 'button_icon' => 'fa fa-globe', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 5,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Lecturer recruitment', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/index.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Help center access',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 3,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'CRM', 'button_name' => 'Go to V-Tiger',
            'button_url' => 'https://google.com#external', 'button_icon' => 'fa fa-globe', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Management Dashboard', 'task_path' => ''
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Study Programs Managemet', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/SP_master_data/SP_Master_Data.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Add new Study Programs',
            'list_element_2' => 'Adjust existing Study Programs', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Student Registration', 'task_path' => ''
        ));

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625015, 'local', 'student_registration');
    }
    if ($oldversion < 20200625016) {

        // Changing type of field date_of_birth on table sr_reservation_list to char.
        $table = new xmldb_table('sr_reservation_list');
        $field = new xmldb_field('date_of_birth', XMLDB_TYPE_CHAR, '10', null, null, null, '2000-01-01', 'last_name');

        // Launch change of type for field date_of_birth.
        $dbman->change_field_type($table, $field);

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625016, 'local', 'student_registration');
    }
    if ($oldversion < 20200625017) {

        // Changing type of field date_of_birth on table sr_waiting_list to char.
        $table = new xmldb_table('sr_waiting_list');
        $field = new xmldb_field('date_of_birth', XMLDB_TYPE_CHAR, '10', null, null, null, '2000-01-01', 'last_name');

        // Launch change of type for field date_of_birth.
        $dbman->change_field_type($table, $field);

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625017, 'local', 'student_registration');
    }
    if ($oldversion < 20200625018) {

        // Define field contract_status to be added to sr_reservation_list.
        $table = new xmldb_table('sr_reservation_list');
        $field = new xmldb_field('contract_status', XMLDB_TYPE_CHAR, '45', null, null, null, 'Not Signed', 'timemodified');

        // Conditionally launch add field contract_status.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Define field contract_sent to be dropped from sr_reservation_list.
        $table = new xmldb_table('sr_reservation_list');
        $field = new xmldb_field('contract_sent');

        // Conditionally launch drop field contract_sent.
        if ($dbman->field_exists($table, $field)) {
            $dbman->drop_field($table, $field);
        }
        $table = new xmldb_table('sr_reservation_list');
        $field = new xmldb_field('contract_withdrawn');

        // Conditionally launch drop field contract_withdrawn.
        if ($dbman->field_exists($table, $field)) {
            $dbman->drop_field($table, $field);
        }


        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625018, 'local', 'student_registration');
    }

    if ($oldversion < 2020062501) {

        // Changing type of field timecreated on table sr_waiting_list to datetime.
        $table = new xmldb_table('sr_waiting_list');
        $field = new xmldb_field('timecreated', XMLDB_TYPE_DATETIME, null, null, null, null, null, 'usermodified');

        // Launch change of type for field timecreated.
        $dbman->change_field_type($table, $field);

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625019, 'local', 'student_registration');
    }

    if ($oldversion < 20200625020) {

        // Define field moodle_capability to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('moodle_capability', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'function');

        // Conditionally launch add field moodle_capability.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625020, 'local', 'student_registration');
    }

    if ($oldversion < 20200625022) {

        // Define table sr_process_settings to be created.
        $table = new xmldb_table('sr_process_settings');

        // Adding fields to table sr_process_settings.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('user_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('manual_waiting_list', XMLDB_TYPE_INTEGER, '1', null, null, null, '0');

        // Adding keys to table sr_process_settings.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, ['id']);
        $table->add_key('user_id', XMLDB_KEY_FOREIGN, ['user_id'], 'user', ['id']);

        // Conditionally launch create table for sr_process_settings.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }
        $DB->update_record('sr_management_tiles', array('id' => 1, 'moodle_capability' => 'local/management_dashbaord:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 2, 'moodle_capability' => 'local/management_dashbaord:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 3, 'moodle_capability' => 'local/management_dashbaord:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 4, 'moodle_capability' => 'local/student_registration:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 5, 'moodle_capability' => 'local/student_registration:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 6, 'moodle_capability' => 'local/student_registration:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 7, 'moodle_capability' => 'local/student_registration:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 8, 'moodle_capability' => 'local/management_dashbaord:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 9, 'moodle_capability' => 'local/management_dashbaord:manage'));
        $DB->update_record('sr_management_tiles', array('id' => 10, 'moodle_capability' => 'local/student_registration:manage'));
        upgrade_plugin_savepoint(true, 20200625022, 'local', 'student_registration');
        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625022, 'local', 'student_registration');
    }



    if ($oldversion < 20200625024) {





        $DB->delete_records('sr_management_tiles');
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/Menu.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '#1',
            'list_element_2' => '#2', 'list_element_3' => '#3', 'list_element_4' => '#4', 'color' => 'danger', 'tile_order' => 1,
            'plugin' => 'Management Dashboard', 'task_path' => 'dashboard_lib.php', 'function' => 'get_tasks_md', 'moodle_capability' => 'local/management_dashbaord:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Scientific Paper', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/index.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Assign Supervisors',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Management Dashboard', 'task_path' => '', 'moodle_capability' => 'local/management_dashbaord:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Dashboard Settings', 'button_name' => 'Settings',
            'button_url' => '/local/student_registration/Dashboard_Settings.php', 'button_icon' => 'fa fa-globe', 'list_element_1' => 'Create new tiles',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 100,
            'plugin' => 'Management Dashboard', 'task_path' => '', 'moodle_capability' => 'local/management_dashbaord:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_prcess_overview.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '#5',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 1,
            'plugin' => 'Student Registration', 'task_path' => '../dashboard_lib.php', 'function' => 'get_tasks_md', 'moodle_capability' => 'local/student_registration:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Capacity Planning', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_Ma_CP.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Student Registration', 'task_path' => '', 'moodle_capability' => 'local/student_registration:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Course Management', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_Ma_CC.php', 'button_icon' => 'fa fa-user', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 3,
            'plugin' => 'Student Registration', 'task_path' => '', 'moodle_capability' => 'local/student_registration:manage'
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Settings for STRE', 'button_name' => 'Edit',
            'button_url' => '/local/student_registration/views/Settings.php', 'button_icon' => 'fa fa-globe', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 5,
            'plugin' => 'Student Registration', 'task_path' => '', 'moodle_capability' => 'local/student_registration:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Lecturer recruitment', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/index.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Help center access',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 3,
            'plugin' => 'Management Dashboard', 'task_path' => '', 'moodle_capability' => 'local/management_dashbaord:manage'
        ));
        //
        $DB->insert_record('sr_management_tiles', array(
            'title' => 'CRM', 'button_name' => 'Go to V-Tiger',
            'button_url' => 'https://google.com#external', 'button_icon' => 'fa fa-globe', 'list_element_1' => '',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Management Dashboard', 'task_path' => '', 'moodle_capability' => 'local/management_dashbaord:manage'
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Study Programs Managemet', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/SP_master_data/SP_Master_Data.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Add new Study Programs',
            'list_element_2' => 'Adjust existing Study Programs', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Student Registration', 'task_path' => '', 'moodle_capability' => 'local/student_registration:manage'
        ));


        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Student Registration', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/ST_process/ST_active_process_CR_ST.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Submit your Demand Planning',
            'list_element_2' => '', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 2,
            'plugin' => 'Student Registration', 'task_path' => '', 'moodle_capability' => 'local/student_registration:cr'
        ));

        $DB->insert_record('sr_management_tiles', array(
            'title' => 'Study Programs Managemet', 'button_name' => 'Manage',
            'button_url' => '/local/student_registration/views/SP_master_data/SP_Master_Data.php', 'button_icon' => 'fa fa-user', 'list_element_1' => 'Add new Study Programs',
            'list_element_2' => 'Adjust existing Study Programs', 'list_element_3' => '', 'list_element_4' => '', 'color' => 'danger', 'tile_order' => 4,
            'plugin' => 'Student Registration', 'task_path' => '', 'moodle_capability' => 'local/student_registration:cr'
        ));



        upgrade_plugin_savepoint(true, 20200625024, 'local', 'student_registration');
    }

    if ($oldversion < 20200625025) {

        // Define field element_1_link to be added to sr_management_tiles.
        $table = new xmldb_table('sr_management_tiles');
        $field = new xmldb_field('element_1_link', XMLDB_TYPE_CHAR, '455', null, null, null, null, 'moodle_capability');
        $field2 = new xmldb_field('element_2_link', XMLDB_TYPE_CHAR, '455', null, null, null, null, 'element_1_link');
        $field3 = new xmldb_field('element_3_link', XMLDB_TYPE_CHAR, '455', null, null, null, null, 'element_2_link');
        $field4 = new xmldb_field('element_4_link', XMLDB_TYPE_CHAR, '455', null, null, null, null, 'element_3_link');

        // Conditionally launch add field element_1_link.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
            $dbman->add_field($table, $field2);
            $dbman->add_field($table, $field3);
            $dbman->add_field($table, $field4);
        }

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625025, 'local', 'student_registration');
    }

    if ($oldversion < 20200625027) {

        // Changing type of field timecreated on table sr_waiting_list to datetime.
        $table = new xmldb_table('sr_reservation_list');
        $field = new xmldb_field('timecreated', XMLDB_TYPE_DATETIME, null, null, null, null, null, 'usermodified');

        // Launch change of type for field timecreated.
        $dbman->change_field_type($table, $field);

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625027, 'local', 'student_registration');
    }

    if ($oldversion < 20200625028) {

        // Define key mdl_user_id (foreign-unique) to be dropped form dg_company_representative.
        $table = new xmldb_table('dg_company_representative');
        $key = new xmldb_key('mdl_user_id', XMLDB_KEY_FOREIGN, ['mdl_user_id'], 'user', ['id']);

        // Launch drop key mdl_user_id.
        $dbman->drop_key($table, $key);

        // Define key mdl_user_id (foreign-unique) to be added to dg_company_representative.
        $table = new xmldb_table('dg_company_representative');
        $key = new xmldb_key('mdl_user_id', XMLDB_KEY_FOREIGN_UNIQUE, ['mdl_user_id'], 'user', ['id']);

        // Launch add key mdl_user_id.
        $dbman->add_key($table, $key);

        // Student_registration savepoint reached.
        upgrade_plugin_savepoint(true, 20200625028, 'local', 'student_registration');
    }


    return true;
};
