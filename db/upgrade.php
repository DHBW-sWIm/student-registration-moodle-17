<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * upgrade DB
 * @param $oldversion
 * @package   local_student_registration
 * @copyright 2020 "DHBW Mannheim" 
 * @license   https://moodle.dhbw-mannheim.de/ 
 */

defined('MOODLE_INTERNAL') || die();

function xmldb_local_student_registration_upgrade($oldversion) {
    global $DB;
    $dbman = $DB->get_manager();
  
    /// Add a new column newcol to the mdl_myqtype_options
    if ($oldversion < 2020051801) {
        // Code to add the column, generated by the 'View PHP Code' option of the XMLDB editor.

        // Define table sr_capacity_planning to be created.
        $table = new xmldb_table('sr_capacity_planning');
        // Adding fields to table local_student_registration_sr_capacity_planning
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('initial_demand', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_company_representative_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_active_study_course.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id']);
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id']);
        $table->add_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

         // Define table sr_company_representative to be created.
         $table = new xmldb_table('sr_company_representative');
         // Adding fields to table local_student_registration_sr_capacity_planning
         $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
         $table->add_field('first_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
         $table->add_field('last_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
         $table->add_field('email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
         $table->add_field('phone', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
         $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
         $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
         $table->add_field('sr_partner_compnay_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
         $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_company_representative.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_partner_compnay_id', XMLDB_KEY_FOREIGN, ['sr_partner_compnay_id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);
        // Adding indexes to table sr_company_representative.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['first_name', 'last_name']);

        
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

         // Define table sr_partner_compnay to be created.
         $table = new xmldb_table('sr_partner_compnay');
         // Adding fields to table sr_partner_compnay
         $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
         $table->add_field('company_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
         $table->add_field('classification', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
         $table->add_field('contact_information', XMLDB_TYPE_CHAR, '255', null, null, null, null);
          // Adding keys to table sr_partner_compnay.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        // Adding indexes to table sr_partner_compnay.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['company_name']);



        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_process to be created.
        $table = new xmldb_table('sr_process');
        // Adding fields to table sr_process
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('program_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('start_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('end_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('start_date_for_a', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('start_date_for_b', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('closed', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('director_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_programs_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_process.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('director_id', XMLDB_KEY_FOREIGN, ['director_id'], 'user' , ['id']);
        $table->add_key('sr_study_programs_id', XMLDB_KEY_FOREIGN, ['sr_study_programs_id'], 'sr_study_programs' , ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_reservation_list to be created.
        $table = new xmldb_table('sr_reservation_list');
        // Adding fields to table sr_reservation_list
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('first_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('last_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('date_of_birth', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('contract_sent', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('contract_received', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('contract_withdrawn', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('private_email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('sr_company_representative_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_active_study_course_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_reservation_list.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative' , ['id']);
        $table->add_key('sr_active_study_course_id', XMLDB_KEY_FOREIGN, ['sr_active_study_course_id'], 'sr_active_study_course' , ['id']);
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process' , ['id']);
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields' , ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);
        // Adding indexes to table sr_reservation_list.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['first_name', 'last_name']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_study_fields to be created.
        $table = new xmldb_table('sr_study_fields');
        // Adding fields to table sr_study_fields
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('study_field_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('description', XMLDB_TYPE_CHAR, '455', null, null, null, null);
        $table->add_field('old', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('sr_study_programs_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        // Adding keys to table sr_study_fields.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_study_programs_id', XMLDB_KEY_FOREIGN, ['sr_study_programs_id'], 'sr_study_programs' , ['id']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }


        // Define table sr_study_places_status to be created.
        $table = new xmldb_table('sr_study_places_status');
        // Adding fields to table sr_study_places_status
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('study_places_available', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('current_demand', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_study_fields.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields' , ['id']);
        $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process' , ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }


        // Define table sr_study_programs to be created.
        $table = new xmldb_table('sr_study_programs');
        // Adding fields to table sr_study_programs
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('study_program_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('description', XMLDB_TYPE_CHAR, '455', null, null, null, null);
        $table->add_field('valid_from', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('valid_to', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('old', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        // Adding keys to table sr_study_fields.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));


        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_waiting_list to be created.
        $table = new xmldb_table('sr_waiting_list');
        // Adding fields to table sr_waiting_list
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('first_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('last_name', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('date_of_birth', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('private_email', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('moved_to_rl', XMLDB_TYPE_INTEGER, '1', null, null, 0, null);
        $table->add_field('sr_company_representative_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_process_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
         // Adding keys to table sr_waiting_list.
         $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
         $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields' , ['id']);
         $table->add_key('sr_company_representative_id', XMLDB_KEY_FOREIGN, ['sr_company_representative_id'], 'sr_company_representative' , ['id']);
         $table->add_key('sr_process_id', XMLDB_KEY_FOREIGN, ['sr_process_id'], 'sr_process' , ['id']);
         $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);
        // Adding indexes to table sr_waiting_list.
        $table->add_index('name', XMLDB_INDEX_NOTUNIQUE, ['first_name', 'last_name']);

        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table sr_active_study_course to be created.
        $table = new xmldb_table('sr_active_study_course');
        // Adding fields to table sr_active_study_course
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', true, XMLDB_NOTNULL, XMLDB_SEQUENCE,null);
        $table->add_field('study_course_name', XMLDB_TYPE_CHAR, '255', null, null, null, null);
        $table->add_field('study_course_abbreviation', XMLDB_TYPE_CHAR, '45', null, null, null, null);
        $table->add_field('start_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('end_date', XMLDB_TYPE_DATETIME, '10', null, null, null, null);
        $table->add_field('course_capacity', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('timemodified', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_employees_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('sr_study_fields_id', XMLDB_TYPE_INTEGER, '10', null, null, null, null);
        $table->add_field('usermodified', XMLDB_TYPE_INTEGER, '10', true, null, 0, null);
        // Adding keys to table sr_active_study_course.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('sr_employees_id', XMLDB_KEY_FOREIGN, ['sr_employees_id'], 'user' , ['id']);
        $table->add_key('sr_study_fields_id', XMLDB_KEY_FOREIGN, ['sr_study_fields_id'], 'sr_study_fields' , ['id']);
        $table->add_key('usermodified', XMLDB_KEY_FOREIGN, ['usermodified'], 'user' , ['id']);

        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        
        // student_registration savepoint reached. savepoint reached.
        upgrade_plugin_savepoint(true, 2020051801, 'local', 'student_registration');

        }  

        if ($oldversion < 2020052301) {

            $table = new xmldb_table('sr_company_representative');
            $field = new xmldb_field('user_id', XMLDB_TYPE_INTEGER, '10', true, null, null, null);
            
  

            if (!$dbman->field_exists($table, $field)) {
                $dbman->add_field($table, $field);
                $table->add_key('user_id', XMLDB_KEY_FOREIGN, ['user_id'], 'user' , ['id']);
            }
            upgrade_plugin_savepoint(true, 2020052301, 'local', 'student_registration');
        }
    
    return true;
}
